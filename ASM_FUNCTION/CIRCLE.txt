CIRCLE:

empty

in
pop rax

push 10000
pop rbx

push rbx
sqrt
push 2
div
int 
push 1
sub
pop rcx

push 0
pop rdx

call :while
out_screen
hlt

while:
    push rdx
    push rbx
    jae :ret

    push rdx
    push rbx
    sqrt
    int
    remain
    int
    pop rex

    push rdx
    push rbx
    sqrt
    int
    div
    int
    pop rfx

    call :circle_equation
    push 25
    ja :while_plus

    call :circle_equation
    push -25
    jb :while_plus

    push 42
    pop [rdx]
    jmp :while_plus

circle_equation:
    push rfx
    push rcx
    sub
    sqr
    push rex
    push rcx
    sub
    sqr
    add
    push rax
    sqr
    sub
    jmp :ret

while_plus:
    push rdx
    push 1
    add
    pop rdx
    jmp :while

ret:
    ret